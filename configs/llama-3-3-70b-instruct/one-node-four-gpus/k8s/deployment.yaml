apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama-3-3-70b-instruct
  namespace: default
  labels:
    app: llama-3-3-70b-instruct
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llama-3-3-70b-instruct
  template:
    metadata:
      labels:
        app: llama-3-3-70b-instruct
    spec:
      volumes:
      - name: cache-volume
        persistentVolumeClaim:
          claimName: llama-3-3-70b-instruct
      - name: shm
        emptyDir:
          medium: Memory
      containers:
      - name: llama-3-3-70b-instruct
        image: vllm/vllm-openai:v0.8.2
        command: ["python3", "-m", "vllm.entrypoints.openai.api_server"]
        args: [
          "--model", "meta-llama/Llama-3.3-70B-Instruct",
          "--tensor-parallel-size", "4",
          "--pipeline-parallel-size", "1",
          "--distributed-executor-backend", "mp",
          "--enable-prefix-caching"
        ]
        env:
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-token-secret
              key: token
        - name: PYTORCH_CUDA_ALLOC_CONF
          value: "expandable_segments:True"
        ports:
        - containerPort: 8000
        resources:
          limits:
            nvidia.com/gpu: "4"
          requests:
            nvidia.com/gpu: "4"
        volumeMounts:
        - mountPath: /root/.cache/huggingface
          name: cache-volume
        - name: shm
          mountPath: /dev/shm
